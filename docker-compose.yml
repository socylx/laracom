# docker-compose.yml
version: '3.3'

services:
  laracom-demo-cli:
    depends_on:
      - laracom-micro-server
    build: ./demo-cli
    environment:
      MICRO_PROXY: "laracom-micro-server:8081"
      MICRO_AUTH_ID: "admin"
      MICRO_AUTH_SECRET: "micro"

  laracom-demo-service:
    depends_on:
      - laracom-micro-server
    build: ./demo-service
    environment:
      MICRO_PROXY: "laracom-micro-server:8081"
      MICRO_AUTH_ID: "admin"
      MICRO_AUTH_SECRET: "micro"

  laracom-user-service:
    depends_on:
      - laracom-micro-server
      - laracom-user-db
    build: ./user-service
    ports:
      - 9092:9091
    environment:
      MICRO_BROKER_ADDRESS: "laracom-micro-server:8003"
      MICRO_PROXY: "laracom-micro-server:8081"
      MICRO_AUTH_ID: "admin"
      MICRO_AUTH_SECRET: "micro"
      DB_HOST: "laracom-user-db:3306"
      DB_NAME: "laracom_user"
      DB_USER: "test"
      DB_PASSWORD: "test"

  laracom-user-cli:
    build: ./user-cli
    environment:
      MICRO_BROKER_ADDRESS: "laracom-micro-server:8003"
      MICRO_PROXY: "laracom-micro-server:8081"
      MICRO_AUTH_ID: "admin"
      MICRO_AUTH_SECRET: "micro"

  laracom-user-db:
    image: mysql:5.7
    container_name: laracom-user-db
    ports:
      - 3306:3306
    volumes:
      - db_data:/var/lib/mysql
    restart: always
    environment:
      MYSQL_USER: "test"
      MYSQL_PASSWORD: "test"
      MYSQL_DATABASE: "laracom_user"
      MYSQL_ROOT_PASSWORD: "root"

  laracom-micro-server:
    image: micro/micro:latest
    container_name: laracom-micro-server
    ports:
      - 8080:8080
      - 8081:8081
      - 8082:8082
      - 8003:8003
    restart: always
    command: server

  laracom-nats:
    image: nats:latest
    ports:
      - 4222:4222
    restart: always

volumes:
  db_data: {}
